{"version":3,"sources":["section/Section.ts","components/Navigation.tsx","components/Markdown.tsx","section/Centrality.tsx","section/Communities.tsx","section/Conclusion.tsx","section/Data.tsx","section/Introduction.tsx","section/Network.tsx","components/HistogramChart.tsx","components/Histogram.tsx","components/ImageSlider.tsx","section/Sentiment.tsx","App.tsx","serviceWorker.ts","index.tsx","App.module.scss","components/Navigation.module.scss","section/styles/Introduction.module.scss","components/Markdown.module.scss","components/HistogramChart.module.scss","components/ImageSlider.module.scss"],"names":["Section","Navigation","_React$PureComponent","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","react","className","styles","keys","map","section","lib","smooth","to","concat","React","Markdown","_React$Component","props","_this","call","axios","get","filename","then","x","setState","data","state","react_markdown_default","a","source","Centrality","react_default","createElement","id","Markdown_Markdown","Component","Communities","Conclusion","Data","onClickExpand","expanded","onClick","Introduction","YouTube","videoId","opts","playerVars","iv_load_policy","Network","HistogramChart","console","debug","mean","chart","Highcharts","getOptions","addSeries","name","type","xAxis","addPlotLine","width","color","zIndex","label","text","toPrecision","normalDistribution","margin","backgroundColor","title","legend","enabled","tooltip","plotOptions","column","pointPadding","groupPadding","borderWidth","borderColor","pointWidth","spline","enableMouseTracking","marker","linkedTo","opposite","gridLineWidth","gridLineColor","gridZIndex","yAxis","min","credits","Histogram","Axios","dataFile","response","series","isBinned","binData","getNormalDistribution","normalDistributionFile","HistogramChart_HistogramChart","reduce","acc","length","std","Math","sqrt","pow","max","unit","_","range","y","mu","sigma","exp","normalY","binBottom","binTop","histData","prev","current","i","Array","j","forEach","bin","index","push","maxFreq","Number","MIN_VALUE","minFreq","MAX_VALUE","ImageSlider","react_slick_lib_default","dots","infinite","speed","slidesToShow","slidesToScroll","images","image","src","process","Sentiment","ImageSlider_ImageSlider","Histogram_Histogram","App","BrowserRouter","basename","Navigation_Navigation","Introduction_Introduction","Data_Data","Network_Network","Centrality_Centrality","Communities_Communities","Sentiment_Sentiment","Conclusion_Conclusion","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","titleContainer","nav","container","placeholder","videoContainer","video","sliderContainer"],"mappings":"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","file":"static/js/main.d1ff1855.chunk.js","sourcesContent":["export enum Section {\r\n    Introduction = 'Introduction',\r\n    Data = 'Data',\r\n    Network = 'Network',\r\n    Centrality = 'Centrality',\r\n    Communities = 'Communities',\r\n    Sentiment = 'Sentiment',\r\n    Conclusion = 'Conclusion',\r\n}\r\n","import * as React from 'react';\r\nimport { HashLink } from 'react-router-hash-link';\r\nimport { Section } from '../section/Section';\r\nimport * as styles from './Navigation.module.scss';\r\n\r\nexport class Navigation extends React.PureComponent {\r\n    public render() {\r\n        return (\r\n            <div>\r\n                <nav className={styles.nav}>\r\n                    <div className={styles.container}>\r\n                        {Object.keys(Section).map((section: string) => (\r\n                            <HashLink\r\n                                key={section}\r\n                                smooth={true}\r\n                                to={`#${section}`}\r\n                            >\r\n                                {section}\r\n                            </HashLink>\r\n                        ))}\r\n                    </div>\r\n                </nav>\r\n                <div className={styles.placeholder} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import axios from 'axios';\r\nimport * as React from 'react';\r\nimport ReactMarkdown from 'react-markdown';\r\nimport * as styles from './Markdown.module.scss';\r\n\r\nexport interface IMarkdownProps {\r\n    filename: string;\r\n}\r\n\r\nexport interface IMarkdownState {\r\n    data?: string;\r\n}\r\n\r\nexport class Markdown extends React.Component<IMarkdownProps, IMarkdownState> {\r\n    public constructor(props: IMarkdownProps) {\r\n        super(props);\r\n\r\n        axios\r\n            .get(`text/${this.props.filename}`)\r\n            .then((x) => this.setState({ data: x.data }));\r\n\r\n        this.state = {};\r\n    }\r\n\r\n    public render() {\r\n        if (!this.state.data) {\r\n            return null;\r\n        }\r\n\r\n        return (\r\n            <div className={styles.container}>\r\n                <ReactMarkdown source={this.state.data} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { Markdown } from '../components/Markdown';\r\nimport { Section } from './Section';\r\n\r\nexport class Centrality extends React.Component {\r\n    public render() {\r\n        return (\r\n            <section id={Section.Centrality}>\r\n                <Markdown filename={'Centrality.md'} />\r\n            </section>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { Markdown } from '../components/Markdown';\r\nimport { Section } from './Section';\r\n\r\nexport class Communities extends React.Component {\r\n    public render() {\r\n        return (\r\n            <section id={Section.Communities}>\r\n                <Markdown filename={'Communities.md'} />\r\n            </section>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { Markdown } from '../components/Markdown';\r\nimport { Section } from './Section';\r\n\r\nexport class Conclusion extends React.Component {\r\n    public render() {\r\n        return (\r\n            <section id={Section.Conclusion}>\r\n                <Markdown filename={'Conclusion.md'} />\r\n            </section>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { Markdown } from '../components/Markdown';\r\nimport { Section } from './Section';\r\n\r\ninterface DataState {\r\n    expanded: boolean;\r\n}\r\n\r\nexport class Data extends React.Component<{}, DataState> {\r\n    public constructor(props: any) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            expanded: false,\r\n        };\r\n    }\r\n\r\n    public render() {\r\n        return (\r\n            <section id={Section.Data}>\r\n                <Markdown filename={'Data.md'} />\r\n                <button onClick={this.onClickExpand}>\r\n                    {this.state.expanded ? 'Hide ' : 'Show '}\r\n                </button>{' '}\r\n                the full, more technical, description of the airport and routes\r\n                data set.\r\n                {this.state.expanded ? (\r\n                    <div>\r\n                        <Markdown filename={'Airports.md'} />\r\n                        <Markdown filename={'Routes.md'} />\r\n                    </div>\r\n                ) : null}\r\n            </section>\r\n        );\r\n    }\r\n\r\n    private onClickExpand = () => {\r\n        this.setState({ expanded: !this.state.expanded });\r\n    };\r\n}\r\n","import React from 'react';\r\nimport YouTube from 'react-youtube';\r\nimport { Markdown } from '../components/Markdown';\r\nimport { Section } from './Section';\r\nimport * as styles from './styles/Introduction.module.scss';\r\n\r\nexport class Introduction extends React.Component {\r\n    public render() {\r\n        return (\r\n            <section id={Section.Introduction}>\r\n                <Markdown filename={'Introduction.md'} />\r\n                <div className={styles.videoContainer}>\r\n                    <YouTube\r\n                        videoId='pDUjlGqFPuQ'\r\n                        className={styles.video}\r\n                        opts={{\r\n                            playerVars: {\r\n                                iv_load_policy: 3,\r\n                            },\r\n                        }}\r\n                    />\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { Markdown } from '../components/Markdown';\r\nimport { Section } from './Section';\r\n\r\nexport class Network extends React.Component {\r\n    public render() {\r\n        return (\r\n            <section id={Section.Network}>\r\n                <Markdown filename={'Network.md'} />\r\n            </section>\r\n        );\r\n    }\r\n}\r\n","import * as Highcharts from 'highcharts';\r\nimport React from 'react';\r\nimport { Point } from '../shared/Point';\r\nimport * as styles from './HistogramChart.module.scss';\r\n\r\ninterface IHistogramProps {\r\n    data: Point[];\r\n    title: string;\r\n    mean: number;\r\n    normalDistribution?: Point[];\r\n}\r\n\r\nexport class HistogramChart extends React.Component<IHistogramProps> {\r\n    public componentDidMount() {\r\n        console.debug(this.props.mean);\r\n        const chart = Highcharts.chart('container', this.getOptions());\r\n        chart.addSeries({\r\n            name: 'Distribution',\r\n            data: this.props.data,\r\n            type: 'column',\r\n        });\r\n\r\n        chart.xAxis[0].addPlotLine({\r\n            value: this.props.mean,\r\n            width: 1,\r\n            color: 'rgba(0,0,0,0.5)',\r\n            zIndex: 8,\r\n            label: {\r\n                text: `Mean ${this.props.mean.toPrecision(2)}`,\r\n            },\r\n        });\r\n\r\n        chart.addSeries({\r\n            data: this.props.normalDistribution,\r\n            type: 'spline',\r\n        });\r\n    }\r\n\r\n    public render() {\r\n        return <div id='container' className={styles.container} />;\r\n    }\r\n\r\n    private getOptions(): any {\r\n        return {\r\n            chart: {\r\n                margin: [50, 25, 25, 50],\r\n                backgroundColor: 'white',\r\n            },\r\n            title: {\r\n                text: this.props.title,\r\n            },\r\n            legend: {\r\n                enabled: false,\r\n            },\r\n            tooltip: {},\r\n            plotOptions: {\r\n                column: {\r\n                    pointPadding: 0,\r\n                    groupPadding: 0,\r\n                    borderWidth: 0.5,\r\n                    borderColor: 'rgba(255,255,255,0.5)',\r\n                    pointWidth: 15,\r\n                },\r\n                spline: {\r\n                    enableMouseTracking: false,\r\n                    marker: false,\r\n                },\r\n            },\r\n            xAxis: [\r\n                {\r\n                    title: {\r\n                        text: 'Range',\r\n                    },\r\n                },\r\n                {\r\n                    linkedTo: 0,\r\n                    opposite: true,\r\n                    gridLineWidth: 0.5,\r\n                    gridLineColor: 'rgba(0,0,0,0.25)',\r\n                    gridZIndex: 8,\r\n                },\r\n            ],\r\n            yAxis: {\r\n                title: {\r\n                    text: 'Frequency',\r\n                },\r\n                min: 0,\r\n            },\r\n            credits: {\r\n                enabled: false,\r\n            },\r\n        };\r\n    }\r\n}\r\n","import Axios from 'axios';\r\nimport _ from 'lodash';\r\nimport React from 'react';\r\nimport { Point } from '../shared/Point';\r\nimport { HistogramChart } from './HistogramChart';\r\n\r\ninterface HistogramProps {\r\n    dataFile: string;\r\n    title: string;\r\n    mean?: number;\r\n    isBinned?: boolean;\r\n    normalDistributionFile?: string;\r\n}\r\n\r\ninterface HistogramState {\r\n    data?: Point[];\r\n    normalDistribution?: Point[];\r\n}\r\n\r\nexport class Histogram extends React.Component<HistogramProps, HistogramState> {\r\n    constructor(props: HistogramProps) {\r\n        super(props);\r\n\r\n        this.state = {};\r\n\r\n        Axios.get(this.props.dataFile).then((response: any) => {\r\n            let data = response.data.series;\r\n            if (!this.props.isBinned) {\r\n                data = this.binData(data);\r\n                this.setState({ data, normalDistribution: this.getNormalDistribution(data) });\r\n            } else {\r\n                this.setState({\r\n                    data,\r\n                });\r\n            }\r\n        });\r\n\r\n        if (this.props.normalDistributionFile) {\r\n            Axios.get(this.props.normalDistributionFile).then((response: any) =>\r\n                this.setState({ normalDistribution: response.data.series }),\r\n            );\r\n        }\r\n    }\r\n\r\n    public render() {\r\n        if (!this.state.data || !this.state.normalDistribution) {\r\n            return null;\r\n        }\r\n\r\n        return (\r\n            <HistogramChart\r\n                data={this.state.data}\r\n                normalDistribution={this.state.normalDistribution}\r\n                title={this.props.title}\r\n                mean={6.2}\r\n            />\r\n        );\r\n    }\r\n\r\n    private getNormalDistribution(data: number[]) {\r\n        const mean = data.reduce((acc: number, value: number) => acc + value) / data.length;\r\n        const std = Math.sqrt(\r\n            data\r\n                .map((x: number) => x - mean)\r\n                .map((x: number) => x ** 2)\r\n                .reduce((acc: number, value: number) => acc + value) /\r\n                (data.length - 1),\r\n        );\r\n\r\n        const min = data.reduce((acc, x) => (acc < x ? acc : x));\r\n        const max = data.reduce((acc, x) => (acc > x ? acc : x));\r\n        const unit = (max - min) / 100;\r\n\r\n        const normalY = (x: number, mu: number, sigma: number) => Math.exp(-0.5 * Math.pow((x - mu) / sigma, 2));\r\n\r\n        return _.range(min, max, unit).map((x: number) => ({\r\n            x,\r\n            y: normalY(x, mean, std),\r\n        }));\r\n    }\r\n\r\n    private binData(data: number[]) {\r\n        const histData: any[] = [];\r\n        const bins = 30;\r\n\r\n        const max = data.reduce((prev: number, current: number) => (prev > current ? prev : current));\r\n        const min = data.reduce((prev: number, current: number) => (prev < current ? prev : current));\r\n        const range = max - min;\r\n        const width = range / bins; // size of the bins\r\n\r\n        let binBottom; // place holders for the bounds of each bin\r\n        let binTop;\r\n\r\n        // loop through the number of cells\r\n        for (let i = 0; i < bins; i++) {\r\n            // set the upper and lower limits of the current cell\r\n            binBottom = min + i * width;\r\n            binTop = binBottom + width;\r\n\r\n            // check for and set the x value of the bin\r\n            if (!histData[i]) {\r\n                histData[i] = new Array();\r\n                histData[i][0] = binBottom + width / 2;\r\n            }\r\n\r\n            // loop through the data to see if it fits in this bin\r\n            for (let j = 0; j < data.length; j++) {\r\n                const x = data[j];\r\n\r\n                // adjust if it's the first pass\r\n                i === 0 && j === 0 ? (binBottom -= 1) : (binBottom = binBottom);\r\n\r\n                // if it fits in the bin, add it\r\n                if (x > binBottom && x <= binTop) {\r\n                    !histData[i][1] ? (histData[i][1] = 1) : histData[i][1]++;\r\n                }\r\n            }\r\n        }\r\n\r\n        histData.forEach((bin: number[], index: number) => {\r\n            if (bin.length === 1) {\r\n                histData[index].push(0);\r\n            }\r\n        });\r\n\r\n        const maxFreq = histData.reduce((acc: number, x: number[]) => (acc > x[1] ? acc : x[1]), Number.MIN_VALUE);\r\n        const minFreq = histData.reduce((acc: number, x: number[]) => (acc < x[1] ? acc : x[1]), Number.MAX_VALUE);\r\n\r\n        histData.forEach((value: number[], index: number) => {\r\n            histData[index][1] = (value[1] - minFreq) / (maxFreq - minFreq);\r\n        });\r\n\r\n        return histData;\r\n    }\r\n}\r\n","import React from 'react';\r\nimport Slider from 'react-slick';\r\nimport '../styles/Slick.scss';\r\nimport * as styles from './ImageSlider.module.scss';\r\n\r\ninterface ImageSliderProps {\r\n    images: string[];\r\n}\r\n\r\nexport class ImageSlider extends React.Component<ImageSliderProps> {\r\n    constructor(props: ImageSliderProps) {\r\n        super(props);\r\n    }\r\n\r\n    public render() {\r\n        const settings = {\r\n            dots: true,\r\n            infinite: true,\r\n            speed: 500,\r\n            slidesToShow: 1,\r\n            slidesToScroll: 1,\r\n        };\r\n\r\n        return (\r\n            <div className={styles.sliderContainer}>\r\n                <Slider {...settings}>\r\n                    {this.props.images.map((image: string) => (\r\n                        <div>\r\n                            <img src={`${process.env.PUBLIC_URL}/images/${image}`} />\r\n                        </div>\r\n                    ))}\r\n                </Slider>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { Histogram } from '../components/Histogram';\r\nimport { ImageSlider } from '../components/ImageSlider';\r\nimport { Markdown } from '../components/Markdown';\r\nimport '../styles/Slick.scss';\r\nimport { Section } from './Section';\r\n\r\nexport class Sentiment extends React.Component {\r\n    public render() {\r\n        return (\r\n            <section id={Section.Sentiment}>\r\n                <Markdown filename={'Sentiment.md'} />\r\n\r\n                <ImageSlider images={['wordcloud.png', 'wordcloud_negative.png', 'wordcloud_positive.png']} />\r\n\r\n                <Histogram\r\n                    title='Sentiment distribution'\r\n                    dataFile='data/sentiment_normalized.json'\r\n                    normalDistributionFile='data/normal_distribution.json'\r\n                    isBinned={true}\r\n                />\r\n            </section>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport * as styles from './App.module.scss';\r\nimport { Navigation } from './components/Navigation';\r\nimport { Centrality } from './section/Centrality';\r\nimport { Communities } from './section/Communities';\r\nimport { Conclusion } from './section/Conclusion';\r\nimport { Data } from './section/Data';\r\nimport { Introduction } from './section/Introduction';\r\nimport { Network } from './section/Network';\r\nimport { Sentiment } from './section/Sentiment';\r\n\r\nclass App extends Component {\r\n    public render() {\r\n        return (\r\n            <BrowserRouter basename='/'>\r\n                <div className={styles.App}>\r\n                    <Navigation />\r\n\r\n                    <div className={styles.titleContainer}>\r\n                        <h1 className={styles.title}>The global airport network</h1>\r\n\r\n                        <img src={`${process.env.PUBLIC_URL}/images/airportgraph.png`} />\r\n                    </div>\r\n\r\n                    <Introduction />\r\n                    <Data />\r\n                    <Network />\r\n                    <Centrality />\r\n                    <Communities />\r\n                    <Sentiment />\r\n                    <Conclusion />\r\n                </div>\r\n            </BrowserRouter>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === '[::1]' ||\n        // 127.0.0.1/8 is considered localhost for IPv4.\n        window.location.hostname.match(\n            /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n        ),\n);\n\ninterface IConfig {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void;\n    onUpdate?: (registration: ServiceWorkerRegistration) => void;\n}\n\nexport function register(config?: IConfig) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n            window.location.href,\n        );\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                            'worker. To learn more, visit http://bit.ly/CRA-PWA',\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: IConfig) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then((registration) => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                    'tabs for this page are closed. See http://bit.ly/CRA-PWA.',\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch((error) => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: IConfig) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then((response) => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n                (contentType != null &&\n                    contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then((registration) => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.',\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then((registration) => {\n            registration.unregister();\n        });\n    }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './index.scss';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__3yOy9\",\"titleContainer\":\"App_titleContainer__2RefD\",\"title\":\"App_title__qYly5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navigation_nav__1AQ-X\",\"container\":\"Navigation_container__2Mh0a\",\"placeholder\":\"Navigation_placeholder__1w9TA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"videoContainer\":\"Introduction_videoContainer__15Gpx\",\"video\":\"Introduction_video__1evGe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Markdown_container__5vecK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"HistogramChart_container__17F1L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sliderContainer\":\"ImageSlider_sliderContainer__hvS2k\"};"],"sourceRoot":""}